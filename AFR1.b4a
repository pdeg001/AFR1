Build1=Default,nl.pdeg.irp1
File1=afr_i18n.xls
File10=montserratsemibold.ttf
File11=pnlCountry.bal
File12=pnlCountryAbbrev.bal
File13=rdodb.db
File14=selectCountry.bal
File15=station_feb.xls
File16=veramono.ttf
File17=veramono-bold.ttf
File18=veramono-italic.ttf
File2=galanogrotesquemedium.ttf
File3=galanogrotesqueregular.ttf
File4=galanogrotesquesemibold.ttf
File5=i18n.db
File6=loadingpanel.bal
File7=main.bal
File8=main_no_internet.bal
File9=montserratextrabold.ttf
FileGroup1=database
FileGroup10=Fonts
FileGroup11=Forms\country\countryClv
FileGroup12=Forms\country\countryClv
FileGroup13=database
FileGroup14=Forms\country
FileGroup15=database
FileGroup16=Fonts
FileGroup17=Fonts
FileGroup18=Fonts
FileGroup2=Fonts
FileGroup3=Fonts
FileGroup4=Fonts
FileGroup5=database
FileGroup6=Forms\general
FileGroup7=Forms\main
FileGroup8=Forms\main
FileGroup9=Fonts
Group=Default Group
Library1=core
Library10=bctextengine
Library2=excel
Library3=javaobject
Library4=net
Library5=phone
Library6=runtimepermissions
Library7=sql
Library8=xui
Library9=xui views
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: https://www.b4x.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="21" android:targetSdkVersion="29"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>~\n~	<uses-permission android:name="android.permission.ACCESS_NETWORK_STATE" />~\n~	<uses-permission android:name="android.permission.WAKE_LOCK" />~\n~	<uses-permission android:name="android.permission.INTERNET" />~\n~	<uses-permission android:name="android.permission.FOREGROUND_SERVICE" />~\n~	)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~~\n~CreateResourceFromFile(Macro, Themes.LightTheme)~\n~CreateResourceFromFile(Macro, Core.NetworkClearText)~\n~~\n~AddPermission(android.permission.INTERNET)~\n~AddPermission(android.permission.VIBRATE)~\n~AddPermission(android.permission.FOREGROUND_SERVICE)~\n~AddPermission(android.permission.REQUEST_IGNORE_BATTERY_OPTIMIZATIONS)~\n~'End of default text.~\n~
Module1=afrDb
Module2=ClsCheckInternetConnection
Module3=FtpGetData
Module4=i18nGetSetViews
Module5=i18nXlsToDb
Module6=ImportData
Module7=LoadingIndicator
Module8=selectCountry
Module9=Starter
NumberOfFiles=18
NumberOfLibraries=10
NumberOfModules=9
Version=10.6
@EndOfDesignText@
#IgnoreWarnings: 9
#Region  Project Attributes 
	#ApplicationLabel: AdFree Radio
	#VersionCode: 30052051
	#VersionName: 1.01
	 'SupportedOrientations possible values: unspecified, landscape or portrait
	#SupportedOrientations: portrait 
#End Region

#Region  Activity Attributes 
	#FullScreen: True
	#IncludeTitle: False
#End Region

Sub Process_Globals
	Type i18n(countryTl As String)
	Type stationList(station_name As String, station_descr As String, _
					station_genre As String, station_country As String, _
					station_language As String, station_url1 As String, _
					station_url2 As String, station_url3 As String)
	Private xui As XUI
	
End Sub

Sub Globals
	Private clsI18n As i18nGetSetViews
	Private clsDb As afrDb
	Private clsInetConnected As ClsCheckInternetConnection
	Private clsFtp As FtpGetData
	Private clsLoading As LoadingIndicator
	
	Private btnCloseApp As Button
	Private lblHeader As Label
	Private EditText1 As EditText
	Private B4XFloatTextField1 As B4XFloatTextField
End Sub

Sub Activity_Create(FirstTime As Boolean)
	clsInetConnected.Initialize
	clsI18n.Initialize
	clsDb.Initialize
	CheckInetConnected
End Sub

Sub Activity_Resume

End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

'Check if the device has a connection to the internet
Private Sub CheckInetConnected
	Wait For (clsInetConnected.CheckConnected) Complete (result As Boolean)
	
	Starter.hasInternet = result
	
	If result = False Then
		Activity.LoadLayout("main_no_internet")
	Else
		Activity.LoadLayout("main")
	End If
	
	clsI18n.GetViewsSeti18N(Activity)
	
	If Starter.hasInternet Then
		InitAfr
	End If
	
End Sub

Private Sub InitAfr
	clsLoading.Initialize(Activity)
	wait for (GetStationList) Complete (result As Boolean)
	
'	Sleep(3000)
	StartActivity(selectCountry)
	Activity.Finish
	
End Sub

Private Sub GetStationList As ResumableSub
	Dim lastStationDownload As String = clsDb.GetParamValue("laststationdownload")
	
	'STATIONS LIJST NOT YET DOWNLOADED
	If lastStationDownload = "0" Then
		Msgbox2Async(clsI18n.GetI18nValueFromString("i18n.get_station_list"), Application.LabelName, clsI18n.GetI18nValueFromString("i18n.btn_yes"), "", clsI18n.GetI18nValueFromString("i18n.btn_no"), Null, False)
		Wait For Msgbox_Result (Result As Int)
		If Result = DialogResponse.NEGATIVE Then
'			Msgbox2Async(clsI18n.GetI18nValueFromString("i18n.application_will_be_closed"), Application.LabelName, clsI18n.GetI18nValueFromString("i18n.btn_ok"), "", "", Null, False)
'			Wait For Msgbox_Result (Result As Int)
'			Starter.closeApplication
		Else
			clsFtp.Initialize
			clsFtp.DownloadList
		End If
	End If
	Return True
End Sub

Public Sub UpdateLoadingIndicator(msg As String)
	clsLoading.ShowIndicator(msg)
	If msg = clsI18n.GetI18nValueFromString("i18n.download_done") Then
		Sleep(2000)
		clsLoading.HideIndicator
	End If
	
End Sub
